<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.campingez.admin.model.dao.AdminDao">
  <select id="findAllUserList" resultMap="userMap">
  	select
    	u.*,
    	a.user_id auth_user_id,
    	a.auth
	from
    	ez_user u join authority a
       		on u.user_id = a.user_id
   order by
        enroll_date desc
  </select>
  
  <select id="findAllBlackList" resultMap="userMap">
  	select
  		u.*,
  		a.user_id auth_user_id,
  		a.auth
  	from
  		ez_user u join authority a
  			on u.user_id = a.user_id
  	where
  		u.yellowcard >= 3
  </select>
  
  <select id="findAllNotBlackList" resultMap="userMap">
  	select
  		u.*,
  		a.user_id auth_user_id,
  		a.auth
  	from
  		ez_user u join authority a
  			on u.user_id = a.user_id
  	where
  		<![CDATA[
  			u.yellowcard < 3
  		]]>
  </select>
  
  <resultMap type="user" id="userMap">
  	<id column="user_id" property="userId"/>
  	<result column="user_name" property="userName"/>
  	<result column="phone" property="phone"/>
  	<result column="password" property="password"/>
  	<result column="email" property="email"/>
  	<result column="gender" property="gender"/>
  	<result column="yellowcard" property="yellowCard"/>
  	<result column="point" property="point"/>
  	<result column="enabled" property="enabled"/>
  	<result column="enroll_date" property="enrollDate"/>
  	<result column="enroll_type" property="enrollType"/>

  	
  	<collection property="authorityList" ofType="authority">
  		<id column="auth_user_id" property="userId"/>
  		<id column="auth" property="auth"/>
  	</collection>
  </resultMap>
  
  <select id="findCampZoneByZoneCode" resultMap="zoneMap">
  	select
	    z.*,
	    p.zone_photo_no,
	    p.zone_code zone_photo_zone_code,
	    p.original_filename,
	    p.renamed_filename
	from
	    camp_zone z left join camp_photo p 
	        on z.zone_code = p.zone_code
	where
	    z.zone_code = #{zoneCode}
  </select>
  
  <resultMap type="campZone" id="zoneMap">
  	<id column="zone_code" property="zoneCode"/>
  	<result column="zone_name" property="zoneName"/>
  	<result column="zone_info" property="zoneInfo"/>
  	<result column="zone_maximum" property="zoneMaximum"/>
  	<result column="zone_price" property="zonePrice"/>
  	
  	<collection property="campPhotos" ofType="campPhoto">
   		<id column="zone_photo_no" property="zonePhotoNo"/>
  		<result column="zone_photo_zone_code" property="zoneCode"/>
  		<result column="original_filename" property="originalFilename"/>
  		<result column="renamed_filename" property="renamedFilename"/>
  	</collection>
  </resultMap>
  
  <select id="findAllAssignmentList" resultMap="assignmentMap"> 
	select  
	    *
	from
	    assignment a left join reservation r
	        on a.res_no = r.res_no
	where
	    res_checkin > current_date
	order by
	    res_checkin
  </select>
  
  <select id="findAssignmentListBySelectType" resultMap="assignmentMap">
	select  
	    *
	from
	    assignment a left join reservation r
	        on a.res_no = r.res_no
	where
	    res_checkin > current_date
	    and
	    assign_state = #{selectType}
	order by
	    res_checkin  
  </select>
  
  <select id="findAllExpireAssignmentList" resultMap="assignmentMap">
	select  
	    *
	from
	    assignment a left join reservation r
	        on a.res_no = r.res_no
	where
	    <![CDATA[
	    	res_checkin <= current_date
	    ]]>
	    and assign_state != '양도완료'
	order by
	    res_checkin  	
  </select>
  
  <resultMap type="assignment" id="assignmentMap">
   	<id column="assign_no" property="assignNo"/>
  	<result column="user_id" property="userId"/>
  	<result column="res_no" property="resNo"/>
  	<result column="assign_title" property="assignTitle"/>
  	<result column="assign_content" property="assignContent"/>
  	<result column="assign_price" property="assignPrice"/>
  	<result column="assign_date" property="assignDate"/>
  	<result column="assign_like_count" property="assignLikeCount"/>
  	<result column="assign_state" property="assignState"/>
  	<result column="assign_transfer" property="assignTransfer"/>
  	<association property="reservation" javaType="reservation">
  		<result column="camp_id" property="campId"/>
  		<result column="res_price" property="resPrice"/>
  		<result column="res_checkin" property="resCheckin"/>
  		<result column="res_checkout" property="resCheckout"/>
  	</association>	
  </resultMap>
	
	<select id="findAllTradeReportList" resultMap="tradeReportMap">
	select
	    *
	from (
	    select
	        r.*,
	        t.trade_no,
	        t.user_id comm_user_id,
	        t.category_id,
	        t.trade_title,
	        t.trade_content,
	        t.trade_date,
	        t.trade_read_count,
	        count(*) over(partition by r.comm_no) as report_count,
	        (select category_name from category_list where r.report_type = category_id) category_name
	    from
	        report r left join trade t 
	            on r.comm_no = t.trade_no
	    where
	        substr(r.comm_no, 1, 1) = 'T'
	) a
	where
	    report_count >= 3 and report_action = 'N'
	order by
	    report_no desc
	</select>  
	
	<resultMap type="trade" id="tradeReportMap">
		<id column="trade_no" property="tradeNo"/>
		<result column="comm_user_id" property="userId"/>
		<result column="category_id" property="categoryId" />
		<result column="trade_title" property="tradeTitle" />
		<result column="trade_content" property="tradeContent" />
		<result column="trade_date" property="tradeDate" />
		<result column="trade_read_count" property="readCount" />
		<result column="trade_price" property="tradePrice" />
		<result column="trade_success" property="tradeSuccess" />
		<result column="trade_quality" property="tradeQuality" />
		<result column="trade_like_count" property="likeCount" />
		<collection property="reportList" ofType="report">
			<id column="report_no" property="reportNo"/>
			<result column="comm_no" property="commNo"/>
			<result column="user_id" property="userId"/>
			<result column="report_content" property="reportContent"/>
			<result column="report_date" property="reportDate"/>
			<result column="report_type" property="reportType"/>
			<result column="report_action" property="reportAction"/>
			<result column="category_name" property="categoryName"/>
		</collection>
	</resultMap>
	
	<!-- https://velog.io/@zawook/Mybatis-Mapper-if -->
	<update id="updateIsDelete">
		<if test="type eq 'T'.toString()">
			update
				trade
			set
				trade_isdelete = 'Y'
			where
				trade_no = #{commNo}
		</if>
		<if test="type eq 'C'.toString()">
			update
				community
			set
				comm_isdelete = 'Y'
			where
				comm_no = #{commNo}
		</if>
	</update>
	
	<select id="findAllUserReportTotal" resultMap="reportMap">
		select
		    a.*,
		    case when
		        (select yellowcard from ez_user where a.comm_user_id = user_id) >= 3
		    then '블랙리스트' end is_blacklist
		from (
		    select
		       t.user_id comm_user_id,
		       count(*) total_report
		    from
		        report r left join trade t 
		            on r.comm_no = t.trade_no
		    where
		        substr(r.comm_no, 1, 1) = 'T'
		    group by
		        t.user_id
		) a
		order by
		    2
	</select>
	
	<select id="findAllCommUserReportTotal" resultMap="reportMap">
		select
		    a.*,
		    case when
		        (select yellowcard from ez_user where a.comm_user_id = user_id) >= 3
		    then '블랙리스트' end is_blacklist
		from (
		    select
		       c.user_id comm_user_id,
		       count(*) total_report
		    from
		        report r left join community c
		            on r.comm_no = c.comm_no
		    where
		        substr(r.comm_no, 1, 1) = 'C'
		    group by
		        c.user_id
		) a
		order by
		    2	
	</select>
	
	<resultMap type="report" id="reportMap">
		<id column="report_no" property="reportNo"/>
		<result column="comm_no" property="commNo"/>
		<result column="user_id" property="userId"/>
		<result column="report_content" property="reportContent"/>
		<result column="report_date" property="reportDate"/>
		<result column="report_type" property="reportType"/>
		<result column="report_action" property="reportAction"/>
		<result column="comm_user_id" property="commUserId"/>
		<result column="total_report" property="totalReport"/>
		<result column="is_blacklist" property="isBlacklist"/>
	</resultMap>
	
	<select id="findAllCommReportList" resultMap="commReportMap">
	select
	    *
	from (
	    select
	        r.*,
            c.comm_no community_comm_no,
            c.user_id comm_user_id,
            c.category_id,
            c.comm_title,
            c.comm_content,
            c.comm_date,
            c.comm_read_count,
            c.comm_report_count,
            c.comm_isdelete,
            c.comm_like_count,
	        count(*) over(partition by r.comm_no) as report_count,
	        (select category_name from category_list where r.report_type = category_id) category_name
	    from
	        report r left join community c
	            on r.comm_no = c.comm_no
	    where
	        substr(r.comm_no, 1, 1) = 'C'
	) a
	where
	    report_count >= 3 and report_action = 'N'
	order by
	    report_no desc
	</select>
	
	<resultMap type="community" id="commReportMap">
		<id column="community_comm_no" property="commNo"/>
	    <result column="comm_user_id" property="userId"/>
	    <result column="category_id" property="categoryId" />
	    <result column="comm_title" property="commTitle" />
	    <result column="comm_content" property="commContent" />
	    <result column="comm_date" property="commDate" />
	    <result column="comm_read_count" property="readCount" />
	    <result column="comm_report_count" property="reportCount" />
	    <result column="comm_isdelete" property="isDelete" />
	    <result column="comm_like_count" property="likeCount" />
		<collection property="reportList" ofType="report">
			<id column="report_no" property="reportNo"/>
			<result column="comm_no" property="commNo"/>
			<result column="user_id" property="userId"/>
			<result column="report_content" property="reportContent"/>
			<result column="report_date" property="reportDate"/>
			<result column="report_type" property="reportType"/>
			<result column="report_action" property="reportAction"/>
			<result column="category_name" property="categoryName"/>
		</collection>		
	</resultMap>
</mapper>